/*
 Copyright (c) 2014, Daniel Eisterhold
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 
 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 
 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import java.util.*;

class TipCalculator {
    
	final double[] tipPercents = new double[]{0.17,0.15,0.12,0.07,0.0};
    final String[] serviceGrades = new String[]{"A","B","C","D","F",};
    double billAmount;
    double taxPercentage;
    String serviceGrade;

    public TipCalculator() {
        billAmount = 10.0;
        serviceGrade = "";
        taxPercentage = 0.0825;
    }
    
    public void getBillAmount() {
    	Scanner input = new Scanner(System.in);
        while(billAmount <= 0.0) {
        	try {
        		System.out.print("What is the amount of the bill? ");
                billAmount = input.nextDouble();
                input.nextLine();
        	}
        	catch(Exception e) {
        		System.out.println("Invalid Input. Try again.");
        		System.out.print("Grade the service A, B, C, D, or F : ");
        	}
            System.out.println("Please enter a positive value.");
            System.out.print("What is the amount of the bill? ");
            billAmount = input.nextDouble();
            input.nextLine();
        }
     }
    
    public void getServiceGrade() {
    	Scanner input = new Scanner(System.in);
        String serviceGrade = "";
        System.out.print("Grade the service A, B, C, D, or F : ");
        while(true) {
        	try {
        		serviceGrade = input.nextLine();
        	}
        	catch(Exception e) {
        		System.out.println("Invalid Input. Try again.");
        		System.out.print("Grade the service A, B, C, D, or F : ");
        	}
            serviceGrade = serviceGrade.toUpperCase();
            for(int counter = 0; counter < 5; counter++) {
                if(serviceGrade.equals(serviceGrades[counter])) {
                	double totalWithTip = billAmount + calculateTip(tipPercents[counter], false);
                	System.out.format("%nPay $%.2f (Tip: $%2.2f)%n",totalWithTip,calculateTip(tipPercents[counter], false));
                    return;
                }
            }
        }
    }
    
    public void displayTipAmounts() {
    	System.out.format("%n\t%5s\t%10s%n","Grade","Tip");
        for(int counter = 0; counter < 5; counter++) {
        	System.out.format("\t%5s",serviceGrades[counter]);
        	System.out.format("\t%10.2f%n", calculateTip(tipPercents[counter], false));
        }
    }
    
    private double calculateTip(double tipPercent, boolean withTax) {
    	if(withTax) {
    		double subtotal = (billAmount/(1.0 + taxPercentage));
    		return subtotal * tipPercent;
    	}
    	else {
    		return billAmount * tipPercent;
    	}
    }

    public static void main(String [] args) {
        TipCalculator tipCalc = new TipCalculator();
        tipCalc.getBillAmount();
        tipCalc.displayTipAmounts();
        tipCalc.getServiceGrade();
    }

}
